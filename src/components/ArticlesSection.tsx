import React, { useState, useMemo } from 'react';
import { 
  Box, 
  Container, 
  Typography, 
  Grid, 
  TextField, 
  InputAdornment,
  Chip,
  Stack,
  Paper
} from '@mui/material';
import { Search, FilterList } from '@mui/icons-material';
import ArticleCard, { Article } from './ArticleCard';


const ArticlesSection: React.FC = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCategory, setSelectedCategory] = useState<string>('all');

  const articles: Article[] = [
    {
      id: 1,
      title: 'Ph∆∞∆°ng ph√°p h·ªçc t·∫≠p t·ª´ v·ª±ng Ti·∫øng Anh hi·ªáu qu·∫£',
      excerpt: 'Chia s·∫ª nh·ªØng ph∆∞∆°ng ph√°p h·ªçc t·∫≠p hi·ªáu qu·∫£, qu·∫£n l√Ω th·ªùi gian v√† k·ªπ thu·∫≠t ghi nh·ªõ gi√∫p c√°c b·∫°n chu·∫©n b·ªã t·ªët nh·∫•t cho k·ª≥ thi quan tr·ªçng.',
      image: 'https://images.pexels.com/photos/1181534/pexels-photo-1181534.jpeg',
      author: 'Nguy·ªÖn Thanh Nh√£',
      date: '12/09/2025',
      category: 'H·ªçc t·∫≠p',
      readTime: '5 ph√∫t ƒë·ªçc',
    },
    {
      id: 2,
      title: 'B·∫°n ƒë√£ bao gi·ªù t·ª± h·ªèi: Sau khi t·ªët nghi·ªáp l·ªõp 12, m√¨nh s·∫Ω ƒëi ƒë√¢u, l√†m g√¨, tr·ªü th√†nh ai?',
      excerpt: 'Kh√°m ph√° nh·ªØng c√°ch duy tr√¨ ƒë·ªông l·ª±c h·ªçc t·∫≠p, v∆∞·ª£t qua √°p l·ª±c v√† gi·ªØ v·ªØng tinh th·∫ßn qua nh·ªØng l√∫c kh√≥ khƒÉn nh·∫•t',
      image: 'https://images.pexels.com/photos/1438081/pexels-photo-1438081.jpeg',
      author: 'Tr∆∞∆°ng Minh To√†n',
      date: '10/09/2025',
      category: 'ƒê·ªông l·ª±c',
      readTime: '7 ph√∫t ƒë·ªçc',
    },
    {
      id: 3,
      title: 'Khi ƒëam m√™ ch·ªâ l√† m·ªôt ph·∫ßn trong b·ª©c tranh cu·ªôc ƒë·ªùi',
      excerpt: 'M·ªói ng∆∞·ªùi c·∫ßn c√≥ m·ªôt g√≥c nh√¨n kh√°c v·ªÅ ƒëam m√™ trong cu·ªôc s·ªëng, theo t·ª´ng kh√≠a c·∫°nh kh√°c nhau v√† th·ª±c t·∫ø h∆°n',
      image: 'https://images.pexels.com/photos/3184306/pexels-photo-3184306.jpeg',
      author: 'Nguy·ªÖn Chu V√¢n Anh',
      date: '05/09/2025',
      category: 'ƒê·ªông l·ª±c',
      readTime: '6 ph√∫t ƒë·ªçc',
    },
    {
      id: 4,
      title: 'Th·ª©c d·∫≠y ƒëi, m√πa thi ƒëang g·ªçi ch√∫ng ta!',
      excerpt: 'H·ªçc t·∫≠p l√† h√†nh tr√¨nh d√†i, v√† nƒÉm cu·ªëi c·∫•p l√† ch·∫∑ng ƒë∆∞·ªùng n∆∞·ªõc r√∫t v√† l√†m th·∫ø n√†o ƒë·ªÉ duy tr√¨ ƒë·ªông l·ª±c h·ªçc t·ªët nh·∫•t.',
      image: 'https://images.pexels.com/photos/3729557/pexels-photo-3729557.jpeg',
      author: 'Nguy·ªÖn Tr√∫c Mai',
      date: '08/09/2025',
      category: 'Thi c·ª≠',
      readTime: '8 ph√∫t ƒë·ªçc',
    },
    {
      id: 5,
      title: 'T√¢m l√Ω t√≠ch c·ª±c: Ch√¨a kh√≥a th√†nh c√¥ng',
      excerpt: 'T√¨m hi·ªÉu v·ªÅ t·∫ßm quan tr·ªçng c·ªßa t√¢m l√Ω t√≠ch c·ª±c, c√°ch x√¢y d·ª±ng t∆∞ duy l·∫°c quan v√† ƒë·ªëi m·∫∑t v·ªõi th·ª≠ th√°ch.',
      image: 'https://images.pexels.com/photos/1438081/pexels-photo-1438081.jpeg',
      author: '',
      date: '05/01/2025',
      category: 'ƒê·ªông l·ª±c',
      readTime: '4 ph√∫t ƒë·ªçc',
    },
    {
      id: 6,
      title: 'Th√¥ng tin x√©t tuy·ªÉn ƒë·∫°i h·ªçc nƒÉm 2025',
      excerpt: 'C·∫≠p nh·∫≠t th√¥ng tin m·ªõi nh·∫•t v·ªÅ x√©t tuy·ªÉn ƒë·∫°i h·ªçc, c√°c ph∆∞∆°ng th·ª©c tuy·ªÉn sinh v√† l·ªô tr√¨nh chu·∫©n b·ªã h·ªì s∆°.',
      image: 'https://images.pexels.com/photos/267885/pexels-photo-267885.jpeg',
      author: '',
      date: '07/01/2025',
      category: 'Thi c·ª≠',
      readTime: '12 ph√∫t ƒë·ªçc',
    },
    {
      id: 7,
      title: 'L·ªô tr√¨nh √¥n t·∫≠p c√°c m√¥n khoa h·ªçc t·ª± nhi√™n',
      excerpt: 'H∆∞·ªõng d·∫´n chi ti·∫øt v·ªÅ l·ªô tr√¨nh √¥n t·∫≠p L√Ω, H√≥a, Sinh m·ªôt c√°ch khoa h·ªçc v√† hi·ªáu qu·∫£ nh·∫•t.',
      image: 'https://images.pexels.com/photos/2280571/pexels-photo-2280571.jpeg',
      author: '',
      date: '03/01/2025',
      category: 'H·ªçc t·∫≠p',
      readTime: '10 ph√∫t ƒë·ªçc',
    },
    {
      id: 8,
      title: 'H∆∞·ªõng d·∫´n ch·ªçn ng√†nh ngh·ªÅ ph√π h·ª£p v·ªõi b·∫£n th√¢n',
      excerpt: 'Kh√°m ph√° b·∫£n th√¢n, t√¨m hi·ªÉu v·ªÅ c√°c ng√†nh ngh·ªÅ v√† c√°ch ƒë∆∞a ra quy·∫øt ƒë·ªãnh ƒë√∫ng ƒë·∫Øn cho t∆∞∆°ng lai.',
      image: 'https://images.pexels.com/photos/3184465/pexels-photo-3184465.jpeg',
      author: '',
      date: '01/01/2025',
      category: 'K·ªπ nƒÉng',
      readTime: '9 ph√∫t ƒë·ªçc',
    },
  ];

  const categories = [
    { value: 'all', label: 'T·∫•t c·∫£', color: '#6B7280' },
    { value: 'h·ªçc t·∫≠p', label: 'H·ªçc t·∫≠p', color: '#14B8A6' },
    { value: 'ƒë·ªông l·ª±c', label: 'ƒê·ªông l·ª±c', color: '#8B5CF6' },
    { value: 'k·ªπ nƒÉng', label: 'K·ªπ nƒÉng', color: '#F97316' },
    { value: 'thi c·ª≠', label: 'Thi c·ª≠', color: '#EF4444' },
  ];

  const filteredArticles = useMemo(() => {
    return articles.filter(article => {
      const matchesSearch = article.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                           article.excerpt.toLowerCase().includes(searchTerm.toLowerCase());
      const matchesCategory = selectedCategory === 'all' || 
                             article.category.toLowerCase() === selectedCategory.toLowerCase();
      return matchesSearch && matchesCategory;
    });
  }, [articles, searchTerm, selectedCategory]);

  return (
    <Box sx={{ py: 8, backgroundColor: 'white' }}>
      <Container maxWidth="lg">
        <Typography
          variant="h2"
          textAlign="center"
          sx={{
            mb: 2,
            fontWeight: 700,
            background: 'linear-gradient(45deg, #14B8A6, #8B5CF6)',
            backgroundClip: 'text',
            WebkitBackgroundClip: 'text',
            WebkitTextFillColor: 'transparent',
          }}
        >
          B√†i vi·∫øt n·ªïi b·∫≠t üìö
        </Typography>
        <Typography
          variant="h6"
          textAlign="center"
          color="text.secondary"
          sx={{ mb: 4, maxWidth: 600, mx: 'auto' }}
        >
          Nh·ªØng b√†i vi·∫øt h·ªØu √≠ch ƒë·ªÉ gi√∫p c√°c b·∫°n h·ªçc t·∫≠p t·ªët h∆°n v√† ƒë·∫°t ƒë∆∞·ª£c nh·ªØng m·ª•c ti√™u cao nh·∫•t
        </Typography>

        {/* Search and Filter Section */}
        <Paper
          elevation={0}
          sx={{
            p: 3,
            mb: 6,
            backgroundColor: '#F8FAFC',
            borderRadius: 3,
            border: '1px solid #E5E7EB',
          }}
        >
          <Box sx={{ mb: 3 }}>
            <TextField
              fullWidth
              placeholder="T√¨m ki·∫øm b√†i vi·∫øt... (v√≠ d·ª•: ƒë·∫°i h·ªçc, h·ªçc t·∫≠p, ƒë·ªông l·ª±c)"
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              InputProps={{
                startAdornment: (
                  <InputAdornment position="start">
                    <Search sx={{ color: '#14B8A6' }} />
                  </InputAdornment>
                ),
              }}
              sx={{
                '& .MuiOutlinedInput-root': {
                  borderRadius: 2,
                  backgroundColor: 'white',
                  '&:hover fieldset': {
                    borderColor: '#14B8A6',
                  },
                  '&.Mui-focused fieldset': {
                    borderColor: '#14B8A6',
                  },
                },
              }}
            />
          </Box>

          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>
            <FilterList sx={{ color: '#6B7280' }} />
            <Typography variant="body2" color="text.secondary" sx={{ fontWeight: 600 }}>
              L·ªçc theo ch·ªß ƒë·ªÅ:
            </Typography>
          </Box>

          <Stack direction="row" spacing={1} sx={{ flexWrap: 'wrap', gap: 1 }}>
            {categories.map((category) => (
              <Chip
                key={category.value}
                label={category.label}
                onClick={() => setSelectedCategory(category.value)}
                variant={selectedCategory === category.value ? 'filled' : 'outlined'}
                sx={{
                  backgroundColor: selectedCategory === category.value ? category.color : 'transparent',
                  color: selectedCategory === category.value ? 'white' : category.color,
                  borderColor: category.color,
                  fontWeight: 600,
                  '&:hover': {
                    backgroundColor: selectedCategory === category.value ? category.color : `${category.color}20`,
                  },
                }}
              />
            ))}
          </Stack>
        </Paper>

        {/* Results Info */}
        <Box sx={{ mb: 4, textAlign: 'center' }}>
          <Typography variant="body1" color="text.secondary">
            {searchTerm || selectedCategory !== 'all' ? (
              <>
                T√¨m th·∫•y <strong>{filteredArticles.length}</strong> b√†i vi·∫øt
                {searchTerm && (
                  <> cho t·ª´ kh√≥a "<strong>{searchTerm}</strong>"</>
                )}
                {selectedCategory !== 'all' && (
                  <> trong ch·ªß ƒë·ªÅ "<strong>{categories.find(c => c.value === selectedCategory)?.label}</strong>"</>
                )}
              </>
            ) : (
              <>Hi·ªÉn th·ªã t·∫•t c·∫£ <strong>{articles.length}</strong> b√†i vi·∫øt</>
            )}
          </Typography>
        </Box>

        <Grid container spacing={4}>
          {filteredArticles.length > 0 ? (
            filteredArticles.map((article) => (
              <Grid item xs={12} sm={6} lg={4} key={article.id}>
                <ArticleCard article={article} />
              </Grid>
            ))
          ) : (
            <Grid item xs={12}>
              <Paper
                elevation={0}
                sx={{
                  p: 6,
                  textAlign: 'center',
                  backgroundColor: '#F9FAFB',
                  borderRadius: 3,
                }}
              >
                <Typography variant="h6" color="text.secondary" sx={{ mb: 2 }}>
                  üòî Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt n√†o
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  H√£y th·ª≠ t√¨m ki·∫øm v·ªõi t·ª´ kh√≥a kh√°c ho·∫∑c ch·ªçn ch·ªß ƒë·ªÅ kh√°c
                </Typography>
              </Paper>
            </Grid>
          )}
        </Grid>
      </Container>
    </Box>
  );
};

export default ArticlesSection;